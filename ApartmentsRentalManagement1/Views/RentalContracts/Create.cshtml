@model ApartmentsRentalManagement1.Models.RentalContract

@{
    ViewBag.Title = "Create Rent Contract";
    Layout = "~/Views/Shared/_Management.cshtml";
}

<h2 class="bold common-font blue text-center">Process New Rent Contract</h2>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal common-font">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ContractNumber, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeNumber, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.TextBox("EmployeeNumber", null, htmlAttributes: new { @class = "form-control empl-number" })
                @Html.ValidationMessageFor(model => model.EmployeeNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-5 blue">Employee Details</label>
            <div class="col-md-7">
                @Html.TextBox("EmployeeDetails", null,
                              htmlAttributes: new { @class = "form-control employee-details", disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractDate, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ContractDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.DropDownList("MaritalStatus", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfChildren, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.NumberOfChildren, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfChildren, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitNumber, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.TextBox("UnitNumber", null, htmlAttributes: new { @class = "form-control unit-number" })
                @Html.ValidationMessageFor(model => model.UnitNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-5 blue">Apartment Details</label>
            <div class="col-md-7">
                @Html.TextArea("ApartmentDetails", null,
                               htmlAttributes: new { @class = "form-control unit-details", rows = "4", disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RentStartDate, htmlAttributes: new { @class = "control-label col-md-5 blue" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.RentStartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-5">
                @Html.ActionLink("Rent Contracts", "Index")
            </label>
            <div class="col-md-7">
                <input type="submit" value="Save Rent Contract" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    $(document).ready(function () {
        $(".empl-number").blur(function (event) {
            $.ajax({
                method: "GET",
                url: "/api/Employees",
                success: function (data) {
                    $.each(data, function (index, staff) {
                        if (staff["EmployeeNumber"] === $(".empl-number").val()) {
                            $(".employee-details").val(staff["FirstName"] + " " + staff["LastName"] + " (" + staff["EmploymentTitle"] + ")");
                        } // if
                    }); // $.each function
                } // success function
            }); // $.ajax
        }); // blur

        $(".unit-number").blur(function (event) {
            $.ajax({
                method: "GET",
                url: "/api/Apartments",
                success: function (data) {
                    $.each(data, function (index, apart) {
                        if (apart["UnitNumber"] === $(".unit-number").val()) {
                            $(".unit-details").val(apart["Residence"]);
                        } // if
                    }); // $.each function
                } // success function
            }); // $.ajax
        }); // blur
    }); // $(document)
    </script>
}
